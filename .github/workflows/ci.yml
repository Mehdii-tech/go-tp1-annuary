name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.txt
        fail_ci_if_error: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

  security:
    name: Security
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: Run gosec
      uses: securego/gosec@master
      with:
        args: ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        check-latest: true

    - name: Build
      run: go build -v ./...

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o bin/linux-amd64/main ./main.go
        GOOS=darwin GOARCH=amd64 go build -o bin/darwin-amd64/main ./main.go
        GOOS=windows GOARCH=amd64 go build -o bin/windows-amd64/main.exe ./main.go 